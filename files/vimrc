"Color scheme
colorscheme distinguished
"Associate *.md with markdown filetype
au BufRead,BufNewFile *.md setf markdown
"Starts the syntax
syntax on
"Sets smart indent
set smartindent
"Incremental search
set incsearch
"Sets 4 spaces on tab
set tabstop=4
set shiftwidth=4
set expandtab
"Shows the lines number
set number
"Maps C-c and C-v to the "global clipboard"
vmap <C-C> "+yi
imap <C-V> <esc>"+gPi
"Shows the found search results
set showmatch
"Shows the current line (where is the cursor at the moment)
set cursorline
"Stops vim from behaving like a strong vi compatible
set nocompatible
"Highlights all search matches
set hlsearch
"Shows the cursor position
set ruler
"Shows the current mode
set showmode
"Shows the current file at the title bar
set title
"Sets better color for search highlight
"hi Search cterm=NONE ctermfg=NONE ctermbg=DarkBlue
"Setting spell checking on markdown and text files
au BufRead,BufNewFile *.md set spell
au BufRead,BufNewFile *.txt set spell

"Strips trailing whitespace
function! StripWhitespace()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    %s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfunction
noremap <leader>ss :call StripWhitespace ()<CR>
set backspace=2
set nocp

"Stops the arrows
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

"Enables the filetype plugin
filetype plugin on
set ofu=syntaxcomplete#Complete

set guioptions-=T
set guioptions-=r
set guioptions-=m
"gvim font size
if has("gui_running")
  if has("gui_gtk2")
    set guifont=Inconsolata\ 11
  elseif has("gui_win32")
    set guifont=Consolas:h11:cANSI
  endif
endif

"Starts NERDTree
autocmd VimEnter * NERDTree
"Minimal UI for NERDTree
let NERDTreeMinimalUI=1
"Toggles the NerdTree
nnoremap <F5> :NERDTreeToggle<CR>

"Tab navigation
nnoremap <Tab> gt
nnoremap <S-Tab> gT

"Crating and closing tabs
nnoremap <C-n> :tabnew<CR>
nnoremap <C-e> :tabclose<CR>

"Disable AutoComplPop.
let g:acp_enableAtStartup = 0
"Launches neocomplcache automatically on vim startup.
let g:neocomplcache_enable_at_startup = 1
"Use smartcase.
let g:neocomplcache_enable_smart_case = 1
"Use camel case completion.
let g:neocomplcache_enable_camel_case_completion = 1
"Use underscore completion.
let g:neocomplcache_enable_underbar_completion = 1
"Sets minimum char length of syntax keyword.
let g:neocomplcache_min_syntax_length = 3

"Plugin key-mappings.
imap <C-k>     <Plug>(neocomplcache_snippets_expand)
smap <C-k>     <Plug>(neocomplcache_snippets_expand)
inoremap <expr><C-g>     neocomplcache#undo_completion()
inoremap <expr><C-l>     neocomplcache#complete_common_string()

"Recommended key-mappings.
"<CR>: close popup and save indent.
inoremap <expr><CR>  neocomplcache#smart_close_popup() . "\<CR>"
"<TAB>: completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
"<C-h>, <BS>: close popup and delete backword char.
inoremap <expr><C-h> neocomplcache#smart_close_popup()."\<C-h>"
inoremap <expr><BS> neocomplcache#smart_close_popup()."\<C-h>"
inoremap <expr><C-y>  neocomplcache#close_popup()
inoremap <expr><C-e>  neocomplcache#cancel_popup()

"Enable omni completion.
autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags

set langmap+=чявертъуиопшщасдфгхйклзьцжбнмЧЯВЕРТЪУИОПШЩАСДФГХЙКЛЗѝЦЖБНМ;`qwertyuiop[]asdfghjklzxcvbnm~QWERTYUIOP{}ASDFGHJKLZXCVBNM,ю\\,Ю\|,

autocmd FileType ruby       set expandtab tabstop=2 shiftwidth=2 softtabstop=2 omnifunc=rubycomplete#Complete
autocmd FileType javascript set expandtab tabstop=2 shiftwidth=2 softtabstop=2 omnifunc=javascriptcomplete#Complete
autocmd FileType coffee     set expandtab tabstop=2 shiftwidth=2 softtabstop=2 omnifunc=coffeecomplete#Complete
autocmd FileType html       set expandtab tabstop=2 shiftwidth=2 softtabstop=2 omnifunc=htmlcomplete#Complete
autocmd FileType css        set expandtab tabstop=2 shiftwidth=2 softtabstop=2 omnifunc=csscomplete#Complete

call pathogen#infect()

autocmd VimEnter * NERDTree
autocmd BufEnter * NERDTreeMirror

let g:tagbar_type_javascript = {
    \ 'ctagsbin' : 'jsctags'
\ }

silent !stty -ixon > /dev/null 2>/dev/null

vmap <C-x> :!pbcopy<CR>  
vmap <C-c> :w !pbcopy<CR><CR> 
let &t_Co=256

"Maps Command + t for the type of the variable
nnoremap ;t :TernType<CR>

"Maps Command+r to rename of variable
nnoremap ;r :TernRename<CR>

noremap gf :CommandT<CR>
